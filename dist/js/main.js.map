{"version":3,"sources":["webpack:///main.js","webpack:///./src/js/main.js","webpack:///./src/js/ui/slider.js"],"names":["webpackJsonp","module","exports","__webpack_require__","$","fn","slider","window","load","dots","fluid","arrows","click","this","className","split","data","Slider","f","el","items","sizes","max","current","interval","opts","speed","delay","complete","_","init","ul","children","outerWidth","outerHeight","each","calculate","extend","setup","index","me","width","height","css","overflow","first","length","position","start","hover","stop","resize","Math","min","round","parent","append","find","indexOf","isFunction","prev","next","event","swipe","on","move","cb","eq","target","obj","is","addClass","siblings","removeClass","animate","left","setInterval","clearInterval","html","o","len","instance"],"mappings":"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","file":"main.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*! functions.js */\n\tvar $ = __webpack_require__(1);\n\t$.fn.slider = __webpack_require__(3);\n\t\n\t$(window).load(function() {\n\t  var slider = $('.banner').slider({\n\t    dots: true,\n\t    fluid: true,\n\t    arrows: true\n\t  });\n\t  $('.slider-arrow').click(function() {\n\t    var fn = this.className.split(' ')[1];\n\t\n\t    //  Either do slider.data('slider').next() or .prev() depending on the className\n\t    slider.data('slider')[fn]();\n\t  });\n\t});\n\t\n\t\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t  var $ = __webpack_require__(1);\n\t\n\t  var Slider = function() {\n\t\n\t    var f = false;\n\t\n\t    this.el = f;\n\t    this.items = f;\n\t\n\t    //  Dimensions\n\t    this.sizes = [];\n\t    this.max = [0,0];\n\t\n\t    //  Current inded\n\t    this.current = 0;\n\t\n\t    //  Start/stop timer\n\t    this.interval = f;\n\t\n\t    //  Set some options\n\t    this.opts = {\n\t      speed: 500,\n\t      delay: 3000, // f for no autoplay\n\t      complete: f, // when a slide's finished\n\t      dots: f, // display pagination\n\t      fluid: f // is it a percentage width?,\n\t    };\n\t\n\t    //  Create a deep clone for methods where context changes\n\t    var _ = this;\n\t\n\t    this.init = function(el, opts) {\n\t      this.el = el;\n\t      this.ul = el.children('ul');\n\t      this.max = [el.outerWidth(), el.outerHeight()];\n\t      this.items = this.ul.children('li').each(this.calculate);\n\t\n\t      //  Check whether we're passing any options in to Slider\n\t      this.opts = $.extend(this.opts, opts);\n\t\n\t      //  Set up the Slider\n\t      this.setup();\n\t\n\t      return this;\n\t    };\n\t\n\t    //  Get the width for an element\n\t    //  Pass a jQuery element as the context with .call(), and the index as a parameter: Slider.calculate.call($('li:first'), 0)\n\t    this.calculate = function(index) {\n\t      var me = $(this),\n\t          width = me.outerWidth(), height = me.outerHeight();\n\t\n\t      //  Add it to the sizes list\n\t      _.sizes[index] = [width, height];\n\t\n\t      //  Set the max values\n\t      if(width > _.max[0]) _.max[0] = width;\n\t      if(height > _.max[1]) _.max[1] = height;\n\t    };\n\t\n\t    //  Work out what methods need calling\n\t    this.setup = function() {\n\t      //  Set the main element\n\t      this.el.css({\n\t        overflow: 'hidden',\n\t        width: _.max[0],\n\t        height: this.items.first().outerHeight()\n\t      });\n\t\n\t      //  Set the relative widths\n\t      this.ul.css({width: (this.items.length * 100) + '%', position: 'relative'});\n\t      this.items.css('width', (100 / this.items.length) + '%');\n\t\n\t      if(this.opts.delay !== f) {\n\t        this.start();\n\t        this.el.hover(this.stop, this.start);\n\t      }\n\t\n\t\n\t      //  Dot pagination\n\t      this.opts.dots && this.dots();\n\t\n\t      //  Little patch for fluid-width sliders. Screw those guys.\n\t      if(this.opts.fluid) {\n\t        var resize = function() {\n\t          _.el.css('width', Math.min(Math.round((_.el.outerWidth() / _.el.parent().outerWidth()) * 100), 100) + '%');\n\t        };\n\t\n\t        resize();\n\t        $(window).resize(resize);\n\t      }\n\t      if(this.opts.arrows) {\n\t        this.el.parent().append('<div class=\"slider-arrow prev\"><i></i></div><div class=\"slider-arrow next\"><i></i></div>')\n\t            .find('.slider-arrow').click(function() {\n\t              if (this.className.indexOf('prev') > 0) {\n\t                $.isFunction(_.prev) && _.prev();\n\t              } else if (this.className.indexOf('next') > 0) {\n\t                $.isFunction(_.next) && _.next();\n\t              }\n\t            });\n\t      };\n\t\n\t      //  Swipe support\n\t      if($.event.swipe) {\n\t        this.el.on('swipeleft', _.prev).on('swiperight', _.next);\n\t      }\n\t    };\n\t\n\t    //  Move Slider to a slide index\n\t    this.move = function(index, cb) {\n\t      //  If it's out of bounds, go to the first slide\n\t      if(!this.items.eq(index).length) index = 0;\n\t      if(index < 0) index = (this.items.length - 1);\n\t\n\t      var target = this.items.eq(index);\n\t      var obj = {height: target.outerHeight()};\n\t      var speed = cb ? 5 : this.opts.speed;\n\t\n\t      if(!this.ul.is(':animated')) {\n\t        //  Handle those pesky dots\n\t        _.el.find('.dot:eq(' + index + ')').addClass('active').siblings().removeClass('active');\n\t\n\t        this.el.animate(obj, speed) && this.ul.animate($.extend({left: '-' + index + '00%'}, obj), speed, function(data) {\n\t          _.current = index;\n\t          $.isFunction(_.opts.complete) && !cb && _.opts.complete(_.el);\n\t        });\n\t      }\n\t    };\n\t\n\t    //  Autoplay functionality\n\t    this.start = function() {\n\t      _.interval = setInterval(function() {\n\t        _.move(_.current + 1);\n\t      }, _.opts.delay);\n\t    };\n\t\n\t    //  Stop autoplay\n\t    this.stop = function() {\n\t      _.interval = clearInterval(_.interval);\n\t      return _;\n\t    };\n\t\n\t\n\t    //  Arrow navigation\n\t    this.next = function() { return _.stop().move(_.current + 1) };\n\t    this.prev = function() { return _.stop().move(_.current - 1) };\n\t\n\t    this.dots = function() {\n\t      //  Create the HTML\n\t      var html = '<ol class=\"dots\">';\n\t      $.each(this.items, function(index) { html += '<li class=\"dot' + (index < 1 ? ' active' : '') + '\">' + (index + 1) + '</li>'; });\n\t      html += '</ol>';\n\t\n\t      //  Add it to the Slider\n\t      this.el.addClass('has-dots').append(html).find('.dot').click(function() {\n\t        _.move($(this).index());\n\t      });\n\t    };\n\t  };\n\t\n\t  //  Create a jQuery plugin\n\t  module.exports = function(o) {\n\t    var len = this.length;\n\t\n\t    //  Enable multiple-slider support\n\t    return this.each(function(index) {\n\t      //  Cache a copy of $(this), so it\n\t      var me = $(this);\n\t      var instance = (new Slider).init(me, o);\n\t\n\t      //  Invoke an Slider instance\n\t      me.data('slider' + (len > 1 ? '-' + (index + 1) : ''), instance);\n\t    });\n\t  };\n\n\n/***/ }\n]);\n\n\n// WEBPACK FOOTER //\n// main.js","/*! functions.js */\nvar $ = require('jquery');\n$.fn.slider = require('ui/slider.js');\n\n$(window).load(function() {\n  var slider = $('.banner').slider({\n    dots: true,\n    fluid: true,\n    arrows: true\n  });\n  $('.slider-arrow').click(function() {\n    var fn = this.className.split(' ')[1];\n\n    //  Either do slider.data('slider').next() or .prev() depending on the className\n    slider.data('slider')[fn]();\n  });\n});\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/main.js\n// module id = 0\n// module chunks = 0","\n  var $ = require('jquery');\n\n  var Slider = function() {\n\n    var f = false;\n\n    this.el = f;\n    this.items = f;\n\n    //  Dimensions\n    this.sizes = [];\n    this.max = [0,0];\n\n    //  Current inded\n    this.current = 0;\n\n    //  Start/stop timer\n    this.interval = f;\n\n    //  Set some options\n    this.opts = {\n      speed: 500,\n      delay: 3000, // f for no autoplay\n      complete: f, // when a slide's finished\n      dots: f, // display pagination\n      fluid: f // is it a percentage width?,\n    };\n\n    //  Create a deep clone for methods where context changes\n    var _ = this;\n\n    this.init = function(el, opts) {\n      this.el = el;\n      this.ul = el.children('ul');\n      this.max = [el.outerWidth(), el.outerHeight()];\n      this.items = this.ul.children('li').each(this.calculate);\n\n      //  Check whether we're passing any options in to Slider\n      this.opts = $.extend(this.opts, opts);\n\n      //  Set up the Slider\n      this.setup();\n\n      return this;\n    };\n\n    //  Get the width for an element\n    //  Pass a jQuery element as the context with .call(), and the index as a parameter: Slider.calculate.call($('li:first'), 0)\n    this.calculate = function(index) {\n      var me = $(this),\n          width = me.outerWidth(), height = me.outerHeight();\n\n      //  Add it to the sizes list\n      _.sizes[index] = [width, height];\n\n      //  Set the max values\n      if(width > _.max[0]) _.max[0] = width;\n      if(height > _.max[1]) _.max[1] = height;\n    };\n\n    //  Work out what methods need calling\n    this.setup = function() {\n      //  Set the main element\n      this.el.css({\n        overflow: 'hidden',\n        width: _.max[0],\n        height: this.items.first().outerHeight()\n      });\n\n      //  Set the relative widths\n      this.ul.css({width: (this.items.length * 100) + '%', position: 'relative'});\n      this.items.css('width', (100 / this.items.length) + '%');\n\n      if(this.opts.delay !== f) {\n        this.start();\n        this.el.hover(this.stop, this.start);\n      }\n\n\n      //  Dot pagination\n      this.opts.dots && this.dots();\n\n      //  Little patch for fluid-width sliders. Screw those guys.\n      if(this.opts.fluid) {\n        var resize = function() {\n          _.el.css('width', Math.min(Math.round((_.el.outerWidth() / _.el.parent().outerWidth()) * 100), 100) + '%');\n        };\n\n        resize();\n        $(window).resize(resize);\n      }\n      if(this.opts.arrows) {\n        this.el.parent().append('<div class=\"slider-arrow prev\"><i></i></div><div class=\"slider-arrow next\"><i></i></div>')\n            .find('.slider-arrow').click(function() {\n              if (this.className.indexOf('prev') > 0) {\n                $.isFunction(_.prev) && _.prev();\n              } else if (this.className.indexOf('next') > 0) {\n                $.isFunction(_.next) && _.next();\n              }\n            });\n      };\n\n      //  Swipe support\n      if($.event.swipe) {\n        this.el.on('swipeleft', _.prev).on('swiperight', _.next);\n      }\n    };\n\n    //  Move Slider to a slide index\n    this.move = function(index, cb) {\n      //  If it's out of bounds, go to the first slide\n      if(!this.items.eq(index).length) index = 0;\n      if(index < 0) index = (this.items.length - 1);\n\n      var target = this.items.eq(index);\n      var obj = {height: target.outerHeight()};\n      var speed = cb ? 5 : this.opts.speed;\n\n      if(!this.ul.is(':animated')) {\n        //  Handle those pesky dots\n        _.el.find('.dot:eq(' + index + ')').addClass('active').siblings().removeClass('active');\n\n        this.el.animate(obj, speed) && this.ul.animate($.extend({left: '-' + index + '00%'}, obj), speed, function(data) {\n          _.current = index;\n          $.isFunction(_.opts.complete) && !cb && _.opts.complete(_.el);\n        });\n      }\n    };\n\n    //  Autoplay functionality\n    this.start = function() {\n      _.interval = setInterval(function() {\n        _.move(_.current + 1);\n      }, _.opts.delay);\n    };\n\n    //  Stop autoplay\n    this.stop = function() {\n      _.interval = clearInterval(_.interval);\n      return _;\n    };\n\n\n    //  Arrow navigation\n    this.next = function() { return _.stop().move(_.current + 1) };\n    this.prev = function() { return _.stop().move(_.current - 1) };\n\n    this.dots = function() {\n      //  Create the HTML\n      var html = '<ol class=\"dots\">';\n      $.each(this.items, function(index) { html += '<li class=\"dot' + (index < 1 ? ' active' : '') + '\">' + (index + 1) + '</li>'; });\n      html += '</ol>';\n\n      //  Add it to the Slider\n      this.el.addClass('has-dots').append(html).find('.dot').click(function() {\n        _.move($(this).index());\n      });\n    };\n  };\n\n  //  Create a jQuery plugin\n  module.exports = function(o) {\n    var len = this.length;\n\n    //  Enable multiple-slider support\n    return this.each(function(index) {\n      //  Cache a copy of $(this), so it\n      var me = $(this);\n      var instance = (new Slider).init(me, o);\n\n      //  Invoke an Slider instance\n      me.data('slider' + (len > 1 ? '-' + (index + 1) : ''), instance);\n    });\n  };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/ui/slider.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}